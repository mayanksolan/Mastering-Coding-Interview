Angular 4:
Architecture of Angular 4 application.
Explain the flow of Angular application from the start of application till the View is loaded in the DOM.(OR How does Angular application bootsraps)
Lifecycle hook in Angular
Router configuration
Can activate for AUTH guard
What are AUTH guard
What is authentication and authorization in Angular 4 and how to achieve it. (can be achieved using AUTH guard)
Pipes in Angular
Custom pipes
HttpClientModule explain
How to request data from rest endpoint using write get, post, put, delete, patch (with example/syntax)
Template forms and Reactive forms in Angular (with example)
Types of directives : component, attribute and structural
Dependency injection
Why do we put * infront of structural directives. (*ngFor *ngIf)
Injectors in Angular
Structure of app.module.ts file in angular. (imports, modules, declatrions, providers/ write it on paper)
Data transfer between 2 components
Parent child relationship : @input and @output
Observables and promises / difference between observalble and promises.
what is promise and what soes it do.
How to see if promise is success or fail. (Ans : using .then or .catch)
what is obeservable.
What is Redux in Angular and how to use it.
What are components.what is the use of package.json
What is the use of Node.js in Angular application.
How to make a component in Angular which has outer body constant and can change inner HTML body content on every use of view ? Explain (header and footer is constant and whatever HTML content we pass should be shown in the body) Ans : using content-view in Angular
How to maintain the data which is used by many components. How to make sure that components use updated data when various componets can operate on same data (Ans: using Redux. The data is stored in redux store)
Explain the building blocks of Redux in angular (3 blocks : Store, Action and reducers)
how to maintain the data when it is shared by two componets. (using service)
what are services in Angular and ow are they used.
what does ngHide ,ngShow and ngIf do?
what is componet directive in ANgular.

JavaScript:
Is JavaScript object oriented ? why ?
Why typescript over JavaScript ?
JavaScript ES6 features : arrow function, template literal with backtick ( ` ), spread operator, classes , inheritance , Generators.
How to create object in  JavaScript (normal/vanilla JavaScript)
How to make sure that only one instance of class is created (singleton) . write code with example.
How to create private method in Javascript with help of code (normal javascript) : Ans - using closure in javascript
Difference between let and var in javascriptwhat is closure with help of example in javascript.
what is execution context in javascript.
what is hoisting in Javascript with example.                                     
what happens when you put a URL in browser and hit enter (explain whole process from sending request to getting response in the browser )
whatr is callback in Javascrippt .Example.
write a function body for function which looks like this  sum(3)(5), it returns sum of 3+5.
Ans : using call back. since we can return fucntion injavascript
/*function start*/
function sum(one){
return function cal(two){
return one+two;
}
} /*function end*/
How to create private method in Javascript with help of code (normal javascript) : Ans - using closure in javascript
Difference between let and var in javascript
what is closure with help of example in javascript.
what is execution context in javascript.
what is hoisting in Javascript with example.

Bootstrap, HTML and css:
What is bootstrap.
Box model in css
What is structural css (scss)
What is semantic way of coding in HTML
Difference between single page application and multi page application.
What is better single page or multi page application.
There are 1000 records in the unordered list in DOM and we have to call a function on click of each list. Where will you place the function of click event ?
(Ans:  in the 'ul' and not in each 'li' coz if we keep it in 'li' we will have to write 100 function calls. putting fucntion call in 'ul' helps since all the child events are propogated to parent incase child does not handle the event. )
what is selector for ID in css (ans : #)
what is selector for class in css (ans : . (dot))
How does bootrap work and how does it help in responsive design.
What is precidence of css in styles. (inline has higest presidence, then internal and then external)
whenever we mention a css style in html, where does the complier first search for style. (inline or else in the StylesURL in component)
New features in HTML5.

Algorithms and Datastructures:
Lists
sets
arrays
strings
reverse array witout using extra memory.
How to eliminate duplicate elemets in array. (ANS : convert array to SET)
Most optimize way to find the middle elemet of array wihout using any extra memory.
Most optimize way to find middle elemet of single linked list without using extra memory.
Most optimized way to find the peak of Bitonic array.
Given two single linked list in ascending fashion, merge both the arrays and sort them in decreasing order without using extra memory.
Programs:
Few javascript programs.
Program to write custome pipe in Angular.
Any short program in Angular 4. Eg. Calling rest api and display username in a list. On click of username in list user details should be shown on the right side.






Amazon Interview Questions
If you would like to practice real life interview questions asked by Amazon, then here they are below. Keep in mind that it will be hard to just get everything right from the beginning. With enough practice you will become better and better, but there is an entire community of us learning, so I recommend you tackle these questions together with our online Discord community (see lesson #3 in this course for the link) and join the conversation and tackle problems in the #interview-questions channel:

1. Past Interview Questions - https://www.glassdoor.ca/Interview/Amazon-Software-Development-Engineer-Interview-Questions-EI_IE6036.0,6_KO7,36.htm

2. From Leetcode:
#1 Two Sum    
#2 Add Two Numbers    
#3 Longest Substring Without Repeating Characters      
#200 Number of Islands    
#20 Valid Parentheses    
#5 Longest Palindromic Substring    
#138 Copy List with Random Pointer    
#121 Best Time to Buy and Sell Stock    
#21 Merge Two Sorted Lists    

3. Bonus Question asked by Amazon:
From: https://www.dailycodingproblem.com/
There's a staircase with N steps, and you can climb 1 or 2 steps at a time. Given N, write a function that returns the number of unique ways you can climb the staircase. The order of the steps matters.
For example, if N is 4, then there are 5 unique ways:
1, 1, 1, 1
2, 1, 1
1, 2, 1
1, 1, 2
2, 2
What if, instead of being able to climb 1 or 2 steps at a time, you could climb any number from a set of positive integers X? For example, if X = {1, 3, 5}, you could climb 1, 3, or 5 steps at a time. Generalize your function to take in X.
Solution
It's always good to start off with some test cases. Let's start with small cases and see if we can find some sort of pattern.
N = 1: [1]
N = 2: [1, 1], [2]
N = 3: [1, 2], [1, 1, 1], [2, 1]
N = 4: [1, 1, 2], [2, 2], [1, 2, 1], [1, 1, 1, 1], [2, 1, 1]
What's the relationship?
The only ways to get to N = 3, is to first get to N = 1, and then go up by 2 steps, or get to N = 2 and go up by 1 step. So f(3) = f(2) + f(1).
Does this hold for N = 4? Yes, it does. Since we can only get to the 4th step by getting to the 3rd step and going up by one, or by getting to the 2nd step and going up by two. So f(4) = f(3) + f(2).
To generalize, f(n) = f(n - 1) + f(n - 2). That's just the Fibonacci sequence!
def staircase(n):
if n <= 1:
return 1
return staircase(n - 1) + staircase(n - 2)
Of course, this is really slow (O(2N)) â€” we are doing a lot of repeated computations! We can do it a lot faster by just computing iteratively:
def staircase(n):
a, b = 1, 2
for _ in range(n - 1):
a, b = b, a + b
return a
Now, let's try to generalize what we've learned so that it works if you can take a number of steps from the set X. Similar reasoning tells us that if X = {1, 3, 5}, then our algorithm should be f(n) = f(n - 1) + f(n - 3) + f(n - 5). If n < 0, then we should return 0 since we can't start from a negative number of steps.
def staircase(n, X):
if n < 0:
return 0
elif n == 0:
return 1
else:
return sum(staircase(n - x, X) for x in X)
This is again, very slow (O(|X|N)) since we are repeating computations again. We can use dynamic programming to speed it up.
Each entry cache[i] will contain the number of ways we can get to step i with the set X. Then, we'll build up the array from zero using the same recurrence as before:
def staircase(n, X):
cache = [0 for _ in range(n + 1)]
cache[0] = 1
for i in range(1, n + 1):
cache[i] += sum(cache[i - x] for x in X if i - x >= 0)
return cache[n]
This now takes O(N * |X|) time and O(N) space.






Facebook Interview Questions
If you would like to practice real life interview questions asked by Facebook, then here they are below. Keep in mind that it will be hard to just get everything right from the beginning. With enough practice you will become better and better, but there is an entire community of us learning, so I recommend you tackle these questions together with our online Discord community (see lesson #3 in this course for the link) and join the conversation and tackle problems in the #interview-questions channel:

1. Past Facebook Interview Questions - https://www.glassdoor.ca/Interview/Facebook-Software-Engineer-Interview-Questions-EI_IE40772.0,8_KO9,26.htm

2. From Leetcode:
#1 Two Sum    
#200 Number of Islands    
#20 Valid Parentheses    
#121 Best Time to Buy and Sell Stock    
#56 Merge Intervals    
#206 Reverse Linked List   

3. Bonus Interview Question asked by Facebook:
Determine the 10 most frequent words given a terabyte of strings. (solution - https://stackoverflow.com/questions/12525455/most-frequent-words-in-a-terabyte-of-data)




Google Interview Questions
If you would like to practice real life interview questions asked by Google, then here they are below. Keep in mind that it will be hard to just get everything right from the beginning. With enough practice you will become better and better, but there is an entire community of us learning, so I recommend you tackle these questions together with our online Discord community (see lesson #3 in this course for the link) and join the conversation and tackle problems in the #interview-questions channel:

1. Past Google Interview Questions - https://www.careercup.com/page?pid=google-interview-questions

2. From Leetcode:

#155 Min Stack   
#200 Number of Islands    
#20 Valid Parentheses    
#42 Trapping Rain Water    
#56 Merge Intervals    
#681 Next Closest Time    
#139 Word Break    
#31 Next Permutation    

3. Bonus Interview Question asked by Google:

Write a function which will remove any given character from a String (solution in Java - http://javarevisited.blogspot.sg/2015/04/how-to-remove-given-character-from.html)






Domain Specific Questions
With smaller companies, you may encounter more domain specific questions when it comes to coding interviews. What does this mean? It means that the questions focus less on computer science fundamentals like Data Structures and Algorithms, and instead they focus on the technology stack that the company is actively working with. To practice these questions, I have listed a great list for you to go through based on what type of job you are applying to (React developer, Mobile developer, etc...):

https://github.com/MaximAbramchuck/awesome-interview-questions

Also:

Front End Developer: https://github.com/h5bp/Front-end-Developer-Interview-Questions

Javascript Interview Questions: 1, 2, 3


PS, keep in mind that it will be hard to just get everything right from the beginning. With enough practice you will become better and better, but there is an entire community of us learning, so I recommend you tackle these questions together with our online Discord community (see lesson #3 in this course for the link) and join the conversation and tackle problems in the #interview-questions channel.